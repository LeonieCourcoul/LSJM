% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsmm_interintra.R, R/plot.R,
%   R/plot.lsjm_classicCR.R, R/plot.lsjm_classicIDM.R,
%   R/plot.lsjm_classicSingle.R, R/plot.lsjm_covDepCR.R,
%   R/plot.lsjm_covDepIDM.R, R/plot.lsjm_covDepSingle.R,
%   R/plot.lsjm_interintraCR.R, R/plot.lsjm_interintraIDM.R,
%   R/plot.lsjm_interintraSingle.R, R/plot.lsmm_classic.R, R/plot.lsmm_covDep.R
\name{lsmm_interintra}
\alias{lsmm_interintra}
\alias{plot}
\alias{plot.lsjm_classicCR}
\alias{plot.lsjm_classicIDM}
\alias{plot.lsjm_classicSingle}
\alias{plot.lsjm_covDepCR}
\alias{plot.lsjm_covDepIDM}
\alias{plot.lsjm_covDepSingle}
\alias{plot.lsjm_interintraCR}
\alias{plot.lsjm_interintraIDM}
\alias{plot.lsjm_interintraSingle}
\alias{plot.lsmm_classic}
\alias{plot.lsmm_covDep}
\title{Plot of a fitted model}
\usage{
lsmm_interintra(
  formFixed,
  formRandom,
  formGroup,
  var_inter,
  var_intra,
  formGroupVisit,
  correlated_re,
  data.long,
  idVar,
  list.long,
  time.prog1,
  S1,
  S2,
  nproc,
  clustertype,
  maxiter,
  print.info,
  file,
  epsa,
  epsb,
  epsd,
  binit
)

\method{plot}{lsjm_classicCR}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict,
  break.times = NULL,
  ID.ind = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_classicIDM}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict,
  break.times = NULL,
  ID.ind = NULL,
  ObjectSmoothHazard = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_classicSingle}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict,
  break.times = NULL,
  ID.ind = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_covDepCR}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict,
  break.times = NULL,
  ID.ind = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_covDepIDM}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict,
  break.times = NULL,
  ID.ind = NULL,
  ObjectSmoothHazard = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_covDepSingle}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict,
  break.times = NULL,
  ID.ind = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_interintraCR}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict = NULL,
  break.times = NULL,
  ID.ind = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_interintraIDM}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict = NULL,
  break.times = NULL,
  ID.ind = NULL,
  ObjectSmoothHazard = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsjm_interintraSingle}(
  Objectlsjm,
  which = "long.fit",
  Objectpredict = NULL,
  break.times = NULL,
  ID.ind = NULL,
  xlim = NULL,
  ylim = NULL
)

\method{plot}{lsmm_classic}(
  object,
  which = "long.fit",
  predictObject = NULL,
  break.times = NULL,
  ID.ind = NULL,
  ylim = NULL,
  xlim = NULL
)

\method{plot}{lsmm_covDep}(
  object,
  which = "long.fit",
  predictObject = NULL,
  break.times = NULL,
  ID.ind = NULL,
  ylim = NULL,
  xlim = NULL
)
}
\arguments{
\item{which}{A character indicating which plot must be display,}

\item{break.times}{A vector of breaking times to create windows if \code{which = 'long.fit'}}

\item{ID.ind}{A vector providing the id of subjects for whom we we wish to trace the individual trajectory.}

\item{object}{A \code{lsmm} or a \code{lsjm} object}

\item{predictObject}{An object of the \code{predict} function}
}
\description{
This function produces different plots (longitudinal and survival goodness-of-fit,
individual trajectory) of a fitted object of class \code{lsmm} or \code{lsjm}.
}
\details{
With \code{which="long.fit"}, this function allows to assess the fit of the longitudinal submodel comparing the mean of marker predictions collected in some windows of times (defined by \code{break.times} or using percentiles) to the mean of the observed measurements and its 95\\% confidence interval.

With \code{which="traj.ind"}, represents the individual trajectory with its prediction interval.

For a \code{lsjm} object only, with \code{which="link"}, the function
allows to assess the fit of the survival submodel. For each transition, the predicted cumulative hazard function at each event time is computed given the predicted random effects. Then the mean of the predicted cumulative hazard functions are compared with there Nelson-Aalen estimator in the case of a single event or with competing risks. For an illness-death model, the predicted cumulative hazard function for each transition is compared to an illness-death model estimated by penalized likelihood accounting for interval censoring with the \code{SmoothHazard} package
}
\examples{

\dontrun{
data(threeC)
threeC$age.visit65 <- (threeC$age.visit-65)/10
threeC$SBP <- threeC$SBP/10
threeC <- threeC \%>\% group_by(ID, num.visit) \%>\% mutate(SBPvisit = mean(SBP))
threeC$age65_CR <- NA
threeC$age65_CR[which(threeC$dem == 1)] <- (threeC$age.last65[which(threeC$dem == 1)] +threeC$age.first65[which(threeC$dem == 1)])/2
threeC$age65_CR[which(threeC$dem == 0)] <- threeC$age.final65[which(threeC$dem == 0)]
threeC$demCR <- threeC$dem
threeC$deathCR <- NA
threeC$deathCR[which(threeC$dem == 1)] <- 0
threeC$deathCR[which(threeC$dem == 0)] <- threeC$death[which(threeC$dem == 0)]
threeC <- threeC \%>\% group_by(ID) \%>\% filter(age.visit65 <= age65_CR)


threeC_ex1 <- threeC[!duplicated(threeC[, c("ID", "num.visit")]), c("ID", "SBPvisit", "age.visit65", "sex","age0_65", "demCR","deathCR","age65_CR")]


# Estimation of a lsmm with time-dependent variability model:
m2 <- lsmm(formFixed = SBPvisit ~ age.visit65,
               formRandom = ~ age.visit65,
               formGroup = ~ ID,
               timeVar = 'age.visit65',
               data.long = threeC_ex1,
               formVar = "cov-dependent",
               formFixedVar = ~ age.visit65+sex,
               formRandomVar = ~ age.visit65,
               correlated_re = FALSE,
               S1 = 500,
               S2 = 1000,
               nproc = 1)

# Predictions:
pred.m2 <- predict(m2, which = c("RE", "Y"))

#Plot:
plot(m2, which = "traj.fit", predictObject = pred.m2,break.times = (seq(65,95,by = 2.5)-65)/10)
plot(m2, which = "traj.ind", predictObject = pred.m2,  ID.ind = c(10003,120010))

# Estimation of a lsjm with time-dependent variability model and competing events:
l2 <- lsjm(Objectlsmm = m2,
           survival_type = 'CR',
           formSurv_01 = ~ sex,
           formSurv_02 = ~ sex,
           sharedtype_01 = c("value", "variability"),
           sharedtype_02 = c("value", "variability"),
           hazardBase_01 = "Weibull",
           hazardBase_02 = "Weibull",
           delta1 = ~ demCR,
           delta2 = ~ deathCR,
           Time_T0 = ~ age0_65,
           Time_T = ~ age65_CR,
           nproc = 5,
           S1 = 1000,
           S2 = 2000)

# Predictions:
pred.l2 <- predict(l2, which = c("RE", "Y", "Cum"))

# Plot:
plot(l2, which = "traj.fit", predictObject = pred.l2,break.times = (seq(65,95,by = 2.5)-65)/10)
plot(l2, which = "traj.ind", predictObject = pred.l2, ID.ind = c(10003,120010))
plot(l2, which = "survival.fit", predictObject = pred.l2)
}


}
